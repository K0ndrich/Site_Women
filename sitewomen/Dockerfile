# Dokerfile - файл хранит сценарий действий для работы с контейнером

# берем docker image(образ) на основе которого будет работать наше приложение
# python - название , : - версия (у нас последняя)
FROM python:3.12-bullseye

RUN mkdir site_women

# задает рабочую директорию, внутри которой будут выполняться инструкции ниже  (внутри doker image)
WORKDIR sitewomen

# команда COPY копирует файлы
# COPY откуда(из локального проекта) - куда (в doker image)
# . - означаел текущий локальный проект
# копируем файл с зависимостями из . - локального проекта в doker image по указаному
COPY req.txt ./

# RUN - выполяеться один раз при создании doker image
# устанавливаем зависимости(стороние библиотеки) для нашего проекта на сервере из скопированого заранее файла с зависимостями req.txt
RUN pip install -r req.txt

# копируем весь . - локальный проект в текущую директорию в doker image
# . - означает текущая локальная директория на сервере
COPY . .

# указываем порт, который будем использовать
EXPOSE 8000

# CMD - выполняет команды в CMD уже после запуска контейнера
# запускаем проект на сервере
# CMD ["python" ,"manage.py", "migrate"]
CMD ["python","manage.py","runserver","0.0.0.0:8000"]
